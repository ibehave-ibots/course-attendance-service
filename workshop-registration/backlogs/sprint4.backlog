(7) Feature: Update Registration Statuses
    
    (DONE) (5) Scenario Outline: change the status of a waitlisted registrant to approved or rejected
        Given the status of eve is waitlisted
        When the user <action> eve
        Then the status of eve is <status>

        Examples:
            | action   | status   |
            | approves | approved |
            | rejects  | rejected |

    
    (2) Scenario Outline: someone tries to reverse a registration decision
        Given the status of eve is <status>
        When the user <action> eve
        Then the status of eve is <status>
        And an error is raised

        Examples:
            | action    | status    |
            | approves  | rejected  |
            | rejects   | approved  | 


(13.5) Feature: Make Attandance Table

    (DONE) (5) Scenario: Two people attend 2 sessions
        Given participants attended workshop 1 with the following events:
            |  Name  | Email        | Session | Arrived | Departed |
            | Alice  |	a@alice.com | Day1    | 12:00   | 15:30    |
            | Alice  |	a@alice.com | Day2    | 12:00   | 19:30    |
            | Bob    |	b@bob.com   | Day1    | 12:00   | 17:30    |
            | Bob    |	b@bob.com   | Day2    | 12:00   | 20:30    |
        When the attendance table is built for workshop 1
        Then 
            |  Name  | Email        | Day 1 | Day2 |
            | Alice  |	a@alice.com | 3.5   | 7.5  | 
            | Bob    |	b@bob.com   | 5.5   | 8.5  |

    (1) Scenario: One person changes name during the sessions, email is the same
        Given participants attended workshop 1 with the following events:
            |  Name  | Email        | Session | Arrived | Departed |
            | Alice  |	a@alice.com | Day1    | 12:00   | 15:30    |
            | Alicia |	a@alice.com | Day1    | 15:30   | 19:30    |
        When the attendance table is built for workshop 1
        Then 
            |  Name         | Email         | Day 1 |
            | Alice, Alicia |	a@alice.com | 7.5   | 
    
    (1.5) Scenario: One person changes name between sessions, email is the same
        Given participants attended workshop 1 with the following events:
            |  Name  | Email        | Session | Arrived | Departed |
            | Alice  |	a@alice.com | Day1    | 12:00   | 15:30    |
            | Alicia |	a@alice.com | Day2    | 15:30   | 19:30    |
        When the attendance table is built for workshop 1
        Then 
            |  Name         | Email         | Day 1 | Day2 |
            | Alice, Alicia |	a@alice.com | 3.5   | 4    |

    (2) Scenario: Someone shows up to the first and third session, not the second.
        Given participants attended workshop 1 with the following events:
            |  Name  | Email        | Session | Arrived | Departed |
            | Alice  |	a@alice.com | Day1    | 12:00   | 15:30    |
            | Alice  |	a@alice.com | Day3    | 15:30   | 19:30    |
            | Bob    |	b@alice.com | Day1    | 12:00   | 15:30    |
            | Bob    |	b@alice.com | Day2    | 15:30   | 19:30    |
            | Bob    |	b@alice.com | Day3    | 15:30   | 19:30    |
        When the attendance table is built for workshop 1
        Then 
            |  Name         | Email         | Day 1 | Day2 | Day3 |
            | Alice         |	a@alice.com | 3.5   | 0    | 4    |
            | Bob           |	b@alice.com | 3.5   | 4    | 4    |

####################################


    (1) Scenario: Someone shows up, then leaves, then comes back.
        Given participants attended workshop 1 with the following events:
            |  Name  | Email        | Session | Arrived | Departed |
            | Alice  |	a@alice.com | Day1    | 12:00   | 15:30    |
            | Alice  |	a@alice.com | Day1    | 17:00   | 19:30    |
        When the attendance table is built for workshop 1
        Then 
            |  Name         | Email         | Day 1 |
            | Alice         |	a@alice.com | 6.0   |

    (1) Scenario: Someone attends from two devices at the same time, that share an email (and potentially a name)
        Given participants attended workshop 1 with the following events:
            |  Name          | Email        | Session | Arrived | Departed |
            | Alice          |	a@alice.com | Day1    | 12:00   | 15:30    |
            | Alice's iPhone |	a@alice.com | Day1    | 12:00   | 15:30    |
        When the attendance table is built for workshop 1
        Then 
            |  Name                  | Email         | Day 1 |
            | Alice, Alicia's iPhone |	a@alice.com  | 3.5   |

    (2) Scenario: Someone adds a second device in the middle, stays with both for a while, then disconnects from one of them.
        Given participants attended workshop 1 with the following events:
            |  Name          | Email        | Session | Arrived | Departed |
            | Alice          |	a@alice.com | Day1    | 12:00   | 15:30    |
            | Alice's iPhone |	a@alice.com | Day1    | 14:00   | 19:00    |
        When the attendance table is built for workshop 1
        Then 
            |  Name                  | Email         | Day 1 |
            | Alice, Alicia's iPhone |	a@alice.com  | 7.0   |

    
## Sprint Review Notes

1. Introduction
Time: 2 minutes
Facilitator: Mo
Objective: Briefly set the context and objectives of the meeting.

2. Review of Sprint Goals
Time: 3 minutes
Facilitator: [Insert Name]
Objective: Recap the goals set at the beginning of the sprint.
Sprint goal: make decisions on registrants status and make attendance report
Product owner requirements:
- edge cases covered
- zoom integration
- generate a spreadsheet that can be dropped into the Google workflow
- UI: specify a workshop and a file to write to
Dev team quality requirements:
- tests are green
- unit test (total < 1s)
- E2E test for every scenario
- Endpoint test
- mypy should be passing
- behave should be passing
- GitHub actions automated test
- label tasks as "done" in the GitHub project
- at least 2 pairs of eyes
- two co-authored commits by the end of the code review
- merged to main

3. Product Backlog Item (PBI) Demonstrations
Time: 15 minutes (Approx. 4 minutes per team member)
Facilitator: Team Members
Objective: Team demonstrates what they've completed during the sprint that is relevant for the product owner.

4. Review of Sprint Metrics
Time: 5 minutes
Facilitator: [Insert Name]
Objective: Discuss key performance indicators like velocity, story points completed, etc.
Talking about estimates:
Did we improve compared to last time on the following items?
    - little info which resulted in inaccurate time estimations
        better, but not ideal. First few days still took longer, this time mainly because of the complexity of adding and creating registrants on Zoom
    - we did not keep estimated times in mind when we worked on a scenario
        did not imporve on it.
    - did not explore new features of the API and relied on familiar features which we worked with in the past
        improved on it. For instance, explored option for additing and deleting Zoom registrant.
    - did not estimate well how long warm-up activities would take
        warm-up activities were more aligned with the next step, which helped.
    - did not estimate well how long the sprint review meeting will take
        ?
    - source of estimate being bad: our behave test was our unit test. What to do in the future: behave should be E2E test
        did that


5. Stakeholder Feedback
Time: 5 minutes
Facilitator: [Insert Name]
Objective: Gather feedback from stakeholders (if present) or discuss customer feedback.
Skipped.


## Sprint Retrospective Notes

6. Retrospective Preview
Time: 10 minutes
Facilitator: everyone
Objective: Discuss the goods and the bads of the team work and workflows during the sprint.
- what did we do well:
    - communication was smooth and decisions were made together
    - code review worked well. Almost in every code review a meaningful improvement was added
    - definition of done was more clear than before
    - pipeline worked well: behave + Mock and InMemory (sync) -> components (i.e. adapters, endpoint calls, etc.) (async) -> behave (E2E) (sync)
    - the development path was much clearer. What helped with that was working more thoroughly (and potentially more slowly), discussing choices
- what could be improved:
    - making more independent tasks within scenarios, gaining fewer story points faster
    - being better prepared for the test Zoom meetings/workshops needed for testing
    - keeping track of how much time is left for a scenario and optimizing between sync vs async workflow depending on that
    - going async to sync and back seemed planned and was not dynamic and natural
    - remote members were not included all the time